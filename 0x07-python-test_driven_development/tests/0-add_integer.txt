The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This is a text file.  First import
``factorial`` from the ``0-add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

test cases for positive numbers
    >>> add_integer(6, 8)
    14

test cases for negative numbers
    >>> add_integer(-10, -7)
    -17

test case negative, positive
    >>> add_integer(-10, 8)
    -2

test case list, int:
    >>> add_integer([3, 86, 7, 5], 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

test case int, infinity float is passed:
    >>> add_integer(28, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Test case fot nan
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Only integers and floats may be provided.

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer


At least one argument must be provided.
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
